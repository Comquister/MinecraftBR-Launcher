name: Build MinecraftBR Launcher
on:
  push:
    branches: [main]
    paths: ['minecraft.build.py', '.github/workflows/build.yml']
  workflow_dispatch:
  release:
    types: [published]

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      should-release: ${{ steps.check.outputs.changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - id: check
        run: |
          changed_files=$(git diff HEAD^ HEAD --name-only)
          if echo "$changed_files" | grep -E "(minecraft\.build\.py|\.github/workflows/build\.yml)"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: check-changes
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - run: python -m pip install --upgrade pip && pip install pyinstaller psutil requests flask PyQt6 portablemc
      - run: pyinstaller --noconfirm --onefile --windowed --icon "image/favicon.ico" --name "MinecraftBr" minecraft.build.py
      - uses: actions/upload-artifact@v4
        with:
          name: MinecraftBR-${{ matrix.os }}
          path: dist/*

  create-release:
    needs: [check-changes, build]
    if: needs.check-changes.outputs.should-release == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - id: version
        run: echo "tag=v$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
      - uses: actions/download-artifact@v4
      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: MinecraftBR Auto Release ${{ steps.version.outputs.tag }}
          files: |
            MinecraftBR-windows-latest/*
            MinecraftBR-ubuntu-latest/*
          generate_release_notes: true